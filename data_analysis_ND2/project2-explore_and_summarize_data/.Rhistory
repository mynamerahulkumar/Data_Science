pf=diamonds
library(ggplot2)
data("diamonds")
ggplot(aes(x=price),data=pf)+
geom_histogram(binwidth = 100)+
ggsave('diamond_price.png')
ggplot(aes(x=price),data=pf)+
geom_histogram(binwidth = 100)+
scale_x_continuous(breaks = 1:5000)
ggsave('diamond_price.png')
ggplot(aes(x=price),data=pf)+
ggsave('diamond_price.png')
qplot(x = price, data = diamonds)+
ggsave('priceHistogram.png')
ggplot(aes(x=price),data=pf)+
ggsave('Diamond_price.png')
qplot(x = price, data = diamonds)+
ggsave('priceHistogram.png')+
geom_histogram(binwidth = 100)
qplot(x = price, data = diamonds)+
ggsave('priceHistogram.png')+
geom_histogram(binwidth = 100)+
scale_x_continuous(breaks = 1:1600)
qplot(x = price, data = diamonds)+
ggsave('priceHistogram.png')+
geom_histogram(binwidth = 100)+
scale_x_continuous(limits = c(100:10000))
qplot(x = price, data = diamonds)+
ggsave('priceHistogram.png')+
geom_histogram(binwidth = 100)+
scale_x_continuous(breaks = 0:10000)
qplot(x=price,data=diamonds$price<500)+
geom_histogram(binwidth = 1)
df1=data("diamonds"$price<500)
lst=pf.split(diamonds$price<500)
lst=diamonds.split(diamonds$price<500)
lst=split(diamonds$price<500)
lst=split(diamonds,diamonds$price<500)
qplot(x=price,data=lst)+
geom_histogram(binwidth = 1)
names(lst)
cut<-diamonds %>%
filter(diamonds$price<500)
cut<-diamonds %>%
filter(price<500)
library("magrittr")
cut<-diamonds %>%
filter(price<500)
cut<-diamonds %>%
filter(diamonds$price<500)
names(cut)
qplot(x=price,data=cut)+
geom_histogram(binwidth = 1)
names(diamonds)
cut_list<-diamonds %>%
filter(diamonds$price<500) %>%
select(carat,cut,color,clarity,depth,table,price,x,y,z)
library(ggplot2)
data("diamonds")
head(diamonds)
head(diamonds$price,diamonds$carat)
head(diamonds$price)
head(diamonds$carat)
ggplot(aes(x=price,y=carat),data=diamonds)+
geom_jitter()
ggplot(aes(x=price,y=carat),data=diamonds)+
scale_x_continuous(lim=c(0,quantile(diamonds$carat,0.99)))+
scale_y_continuous(lim=c(0,qunatile(diamonds$price,0.99)))+
geom_point(fill=I("#F79420"),color=I('black'),shape=21)
ggplot(aes(x=price,y=carat),data=diamonds)+
scale_x_continuous(lim=c(0,quantile(diamonds$carat,0.99)))+
scale_y_continuous(lim=c(0,quantile(diamonds$price,0.99)))+
geom_point(fill=I("#F79420"),color=I('black'),shape=21)
ggplot(aes(x=carat,y=price),data=diamonds)+
scale_x_continuous(lim=c(0,quantile(diamonds$carat,0.99)))+
scale_y_continuous(lim=c(0,quantile(diamonds$price,0.99)))+
geom_point(fill=I("#F79420"),color=I('black'),shape=21)
getwd()
getwd()
setwd("/Users/rahul/Documents/enjoy/UdaCity/NanoDegree/2DataScienceND2/R_Project/R_Project_Udacity/p2-explore_and_summarize_data")
library(RJSONIO)
#library(ggplot2)
#install.packages('knitr',dependencies = T)
#install.packages("lmtest", repos = "http://cran.us.r-project.org")
library(lmtest)
library(knitr)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(memisc)
library(dplyr)
library(memisc)
library(dplyr)
pf=read.csv('wineQualityWhites.csv')
head(pf)
summary(pf)
ggplot(aes(x=fixed.acidity),data=pf)+
geom_histogram(binwidth = 1)+
scale_x_continuous(limits = c(3,15),breaks = seq(3,15,1))
summary(pf$fixed.acidity)
ggplot(aes(x=volatile.acidity),data=pf)+
geom_histogram(binwidth = 0.2) +
scale_x_continuous(limits = c(0,1.2),breaks = seq(0,1.2,0.2))
summary(pf$volatile.acidity)
ggplot(aes(x=citric.acid),data=pf)+
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0,1.7),breaks = c(0,1.7,0.1))
summary(pf$citric.acid)
ggplot(aes(x=residual.sugar),data=pf)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,67),breaks = seq(0,67,5))
summary(pf$residual.sugar)
ggplot(aes(x=chlorides),data=pf)+
geom_histogram(binwidth = 0.05) +
scale_x_continuous(limits =c(0.0,0.35),breaks = seq(0.0,0.35,0.05))
summary(pf$chlorides)
ggplot(aes(x=free.sulfur.dioxide),data=pf)+
geom_histogram(binwidth = 0.05)+
scale_x_continuous(limits = c(0,300),breaks = seq(0,300,30))
summary(pf$free.sulfur.dioxide)
ggplot(aes(x=total.sulfur.dioxide),data=pf)+
geom_histogram(binwidth = 0.05)+
scale_x_continuous(limits = c(9,450),breaks = seq(9,450,40))
summary(pf$total.sulfur.dioxide)
ggplot(aes(x=density),data=pf)+
geom_histogram(binwidth = 0.0002)+
scale_x_continuous(limits = c(0.975,1.039),breaks = seq(0.975,1.039,0.01))
summary(pf$density)
ggplot(aes(x=pH),data=pf)+
geom_histogram(binwidth = 0.06)+
scale_x_continuous(limits = c(2.70,3.820),breaks = seq(2.70,3.820,0.06))
summary(pf$pH)
ggplot(aes(x=sulphates),data=pf)+
geom_histogram(binwidth = 0.06)+
scale_x_continuous(limits = c(0.2200,1.0800),breaks = seq(0.2200,1.080,0.06))
summary(pf$sulphates)
ggplot(aes(x=alcohol),data=pf)+
geom_histogram(binwidth = 0.5)+
scale_x_continuous(limits = c(8.00,14.20),breaks = seq(8.00,14.20,0.5))
summary(pf$alcohol)
ggplot(aes(x=quality),data=pf)+
geom_bar()+
labs(title="Wine quality Distribution(barchart)")+
scale_x_continuous(limits = c(3.00,9.00),breaks = seq(3.00,9.00,1))
summary(pf$quality)
pf$alcohol_percentage<-cut(pf$alcohol,c(8,10,12,14,16))
head(pf$alcohol_percentage)
ggcorr(subset(pf,select=-c(X)),
method = c("all.obs","spearman"),
nbreaks = 4,palette = "PuOr",label = TRUE,
name = "Spearman correlation coeff. (rho)",
hjust=0.8,angle=-70,size=3)+
ggtitle("Spearman Correlation coefficient Matrix")
ggplot(aes(x=alcohol,y=quality),data=pf)+
geom_histogram(stat="identity",binwidth = 1)
summary(pf$alcohol)
ggplot(aes(x=sulphates,y=quality),data=pf)+
geom_histogram(stat="identity",binwidth = 1)
summary(pf$sulphates)
ggplot(aes(x=pH,y=quality),data=pf)+
geom_histogram(stat="identity",binwidth = 1)
summary(pf$pH)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),inverse = function(x) x^3)
ggplot(aes(fixed.acidity,quality),data=pf)+
geom_jitter()+
scale_x_continuous(trans = cuberoot_trans(),limits = c(6,14),
breaks = c(6,8,10,12,14))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of fixed acidity')
ggplot(aes(free.sulfur.dioxide,quality),data=pf)+
geom_jitter()+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,100),
breaks = c(0,20,40,60,100))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of free sulphur dioxide')
ggplot(aes(free.sulfur.dioxide,quality),data=pf)+
geom_boxplot()+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,100),
breaks = c(0,20,40,60,100))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of free sulphur dioxide')
ggplot(aes(free.sulfur.dioxide,quality),data=pf)+
geom_jitter()+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,100),
breaks = c(0,20,40,60,100))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of free sulphur dioxide')
newDataA<-pf[!is.na(pf$alcohol_percentage),]
ggplot(aes(x=alcohol_percentage,y=quality),data=newDataA)+
geom_boxplot()
summary(pf$alcohol)
pf$pH_group<-cut(pf$pH,c(2.720,3.02,3.32,3.62,3.82))
newData<-pf[!is.na(pf$pH_group),]
ggplot(aes(x=pH_group,y=quality),data = newData)+
geom_boxplot()
summary(pf$pH_group)
ggplot(data = pf,aes(x=density,y=alcohol,color=factor(quality)))+
coord_cartesian(xlim = c(0.985,1.002),
ylim = c(7.5,15))+
geom_jitter(size=1)+
geom_smooth(method = 'lm')+
scale_x_continuous(breaks = seq(0.985,1.002,0.002))+
scale_color_brewer(type = 'seq',guide=guide_legend(title='Quality Levels'))+
labs(x='Density(mg/l)',y='Alcohol(% by volume)',
title='Relationship of density and alcohol with colored quality levels')
ggplot(data = pf,aes(x=free.sulfur.dioxide,y=alcohol,color=factor(quality)))+
coord_cartesian(xlim = c(2.00,289),
ylim = c(7.5,15))+
geom_jitter(size=1)+
geom_smooth(method = 'lm')+
scale_x_continuous(breaks = seq(2.00,289,20))+
scale_color_brewer(type = 'seq',guide=guide_legend(title='Quality Levels'))+
labs(x='Free sulphur dioxide(mg/dm^3)',y='Alcohol(% by volume)',title='Relationship of free sulphur dioxide and alcohol with colored quality levels')
ggplot(data = pf,aes(x=pH,y=alcohol,color=factor(quality)))+
coord_cartesian(xlim = c(2.720,3.820),
ylim = c(7.5,15))+
geom_jitter(size=1)+
geom_smooth(method = 'lm')+
scale_x_continuous(breaks = seq(2.720,3.820,0.002))+
scale_color_brewer(type = 'seq',guide=guide_legend(title='Quality Levels'))+
labs(x='pH',y='Alcohol(% by volume)',title='Relationship of pH and alcohol with colored quality levels')
library(RColorBrewer)
ggplot(aes(free.sulfur.dioxide,quality,color=alcohol_percentage),data=pf)+
geom_jitter(alpha=0.5,size=1,position = 'jitter')+
scale_color_brewer(type='div',
guide=guide_legend(title='Alcohol Percentage',reverse = T,
override.aes = list(alpha=1,size=2)))+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,100),
breaks = c(0,20,40,60,100))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of free sulphur dioxide and alcohol')
ggplot(aes(free.sulfur.dioxide,quality,color=pH_group),data=pf)+
geom_jitter(alpha=0.5,size=1,position = 'jitter')+
scale_color_brewer(type='div',
guide=guide_legend(title='pH group',reverse = T,
override.aes = list(alpha=1,size=2)))+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,100),
breaks = c(0,20,40,60,100))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of free sulphur dioxide and pH group')
ggplot(aes(volatile.acidity,quality,color=pH_group),data=pf)+
geom_jitter(alpha=0.5,size=1,position = 'jitter')+
scale_color_brewer(type='div',
guide=guide_legend(title='pH group',reverse = T,
override.aes = list(alpha=1,size=2)))+
scale_x_continuous(trans = cuberoot_trans(),limits = c(0,2),
breaks = c(0.5,1,1.5,2))+
scale_y_continuous(trans = log10_trans(),limits = c(2,10),
breaks = c(2,4,6,8,10))+
ggtitle('Quality(log10) by cube-root of  volatile acidity and pH group')
pf$pH_group<-cut(pf$pH,c(2.720,3.02,3.32,3.62,3.82))
newData<-pf[!is.na(pf$pH_group),]
ggplot(aes(x=pH_group,y=quality),data = newData)+
geom_boxplot()
newDataA=pf[!is.na(pf$alcohol_percentage),]
ggplot(aes(x=alcohol_percentage,y=quality),data = newDataA)+
geom_boxplot()
ggplot(aes(x=quality),data=pf)+
geom_bar()+
labs(title="Wine quality Distribution(barchart)")+
scale_x_continuous(limits = c(3.00,9.00),breaks = seq(3.00,9.00,1))
ggplot(aes(x=alcohol,y=quality),data=pf)+
geom_histogram(stat="identity",binwidth = 1)+
labs(x='Alcohol(% by Volume)',y='Quality')
ggplot(data = pf,aes(x=density,y=alcohol,color=factor(quality)))+
coord_cartesian(xlim = c(0.985,1.002),
ylim = c(7.5,15))+
geom_jitter(size=1)+
geom_smooth(method = 'lm')+
scale_x_continuous(breaks = seq(0.985,1.002,0.002))+
scale_color_brewer(type = 'seq',guide=guide_legend(title='Quality Levels'))+
labs(x='Density(mg/l)',y='Alcohol(% by volume)',
title='Relationship of density and alcohol with colored quality levels')
library(RJSONIO)
